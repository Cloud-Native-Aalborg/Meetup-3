apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jaeger
  namespace: monitoring
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: jaeger
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: all-in-one
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "16686"
    spec:
      containers:
        - name: jaeger
          image: jaegertracing/all-in-one:1.14.0
          imagePullPolicy: "IfNotPresent"
          args:
            - --es.tls.ca
            - /es-certs/ca.crt
            - --es.username
            - jaeger
            - --es.password
            - jaeger
          env:
            - name: COLLECTOR_ZIPKIN_HTTP_PORT
              value: "9411"
            - name: ES_SERVER_URLS
              value: https://monitoring-es-http:9200/
            - name: SPAN_STORAGE_TYPE
              value: elasticsearch
          ports:
            - containerPort: 5775
              protocol: UDP
            - containerPort: 6831
              protocol: UDP
            - containerPort: 6832
              protocol: UDP
            - containerPort: 5778
              protocol: TCP
            - containerPort: 16686
              protocol: TCP
            - containerPort: 9411
              protocol: TCP
          readinessProbe:
            httpGet:
              path: "/"
              port: 14269
            initialDelaySeconds: 5
          volumeMounts:
            - mountPath: /es-certs
              name: es-certs
              readOnly: true
      volumes:
        - name: es-certs
          secret:
            defaultMode: 256
            optional: false
            secretName: monitoring-es-http-certs-public
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: monitoring
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: query
spec:
  ports:
    - name: query-http
      port: 80
      protocol: TCP
      targetPort: 16686
      nodePort: 32501
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: monitoring
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: collector
spec:
  ports:
    - name: jaeger-collector-tchannel
      port: 14267
      protocol: TCP
      targetPort: 14267
    - name: jaeger-collector-http
      port: 14268
      protocol: TCP
      targetPort: 14268
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-agent
  namespace: monitoring
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: agent
spec:
  ports:
    - name: agent-zipkin-thrift
      port: 5775
      protocol: UDP
      targetPort: 5775
    - name: agent-compact
      port: 6831
      protocol: UDP
      targetPort: 6831
    - name: agent-binary
      port: 6832
      protocol: UDP
      targetPort: 6832
    - name: agent-configs
      port: 5778
      protocol: TCP
      targetPort: 5778
  clusterIP: None
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one
---
apiVersion: v1
kind: Service
metadata:
  namespace: monitoring
  name: zipkin
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: zipkin
spec:
  ports:
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
  clusterIP: None
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jaeger
  namespace: monitoring
spec:
  rules:
    - host: jaeger.monitoring.172.20.30.21.xip.io
      http:
        paths:
          - backend:
              serviceName: jaeger-query
              servicePort: 80
